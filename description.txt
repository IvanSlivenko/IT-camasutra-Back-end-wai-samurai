---------------------------------------------------------------------------- Lesson 1
https://youtu.be/cHVhpNrjcPs?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk

-----------------------------------------------------------------------------
00 : 00 : 00



---------------------------------------------------------------------------- Lesson  2

https://youtu.be/ugfE0ttbstQ?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk

----------------------------------------------------------------------------
00 : 08 : 55

--------------------------------------------------------------------------- Lesson 3
https://youtu.be/qRR-E3czK_o?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk

type fetches
GET
POST
DELETE
UPDATE

HTTPS://  



---------------------------------------------------------------------------
00 : 00 : 00



------------------------------------------------------------------------------- Lesson 4
https://youtu.be/2yBAPuTywRA?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk

server

request - information from brauser - client
response

JSON

JS
node.js
nest





-------------------------------------------------------------------------------
00 : 00 : 00


-------------------------------------------------------------------------------------- Lesson 5
https://youtu.be/hyPIB1MKYoA?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk

node.js
запуск файла
node server.js

http server -

http response -> nomber port 3003

localhost: 3003



--------------------------------------------------------------------------------------
00 : 16 : 58

--------------------------------------------------------------------------------------- Lesson 6
https://youtu.be/hyPIB1MKYoA?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk


promise ((resolve, reject)=>{

})
---------------------------------------------------------------------------------------
00 : 33 : 23


--------------------------------------------------------------------------------------- Lesson 7

https://youtu.be/v7zq1DntN_Y?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk

C - create == POST
R - reade == GET
U - update == PUT ||  PATCH
D - delete == DELETE


http protocol -> method : get, post, patch, delete, put

API :
Base URL + Resourse + URI Parameter || Query Parameter(?Author=London&Year=2025&limit=100&sort=title) + method

fetch('http://localhost:3003/api/users/322/books',{method: 'GET'}) - отримання

fetch('http://localhost:3003/api/users/322/books',{method: 'POST', body: JSON.stringify({ title: 'JS - samurai way', author: 'Ivan'})}) - створення

fetch('http://localhost:3003/api/users/322/books/32',{method: 'PUT', body: JSON.stringify({ title: 'JS - samurai way', author: 'Volodymyr'})}) - оновлення (зміни) потрібні всі параметри

fetch('http://localhost:3003/api/users/322/books/32',{method: 'PATCH', body: JSON.stringify({ title: 'JS - samurai way', author: 'Volodymyr'})}) - оновлення (зміни) потрібні  тільки параметри що змінились


JSON.stringify({}) - перетворення об'єкта у стрічку

---------------------------------------------------------------------------------------
00 : 15 : 40

--------------------------------------------------------------------------------------- Lesson 8

https://youtu.be/DI_jSP2Jshg?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk


Express


fetch('http://localhost:3000/samurais', { method: 'POST' })


nodemon

yarn add nodemon -D

Запуск локально nodemon index.js

yarn nodemon index.js

---------------------------------------------------------------------------------------
00 : 45 : 13


--------------------------------------------------------------------------------------- Lesson 9
https://youtu.be/JObcnbLMvck?list=PLcvhF2Wqh7DP4tZ851CauQ8GqgqlCocjk


fetch('http://localhost:3000',{method: 'GET'})
.then(res => res.json())
.then(json => console.log(json))

///////////////////////////////////////////////////////////////////////////////
import express from "express";
const app = express();
const port = 3000;

app.get("/courses/:id", (req, res) => {
  res.json([
    { id: 1, title: "front-end" },
    { id: 2, title: "back-end" },
    { id: 3, title: "automation ga" },
    { id: 4, title: "devops" }
  ].find(c => c.id === +req.params.id));  // !!!!!!!!!!!!!!!!!!!!!!!!!!!
});
/////////////////////////////////////////////////////////////////////////////////

yarn add -D @types/cors

import express from "express";
import cors from "cors";

const app = express();
app.use(cors());
const port = 3000;


відкриваємо в браузері файл
---------------------------------------------- test.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Test Fetch</title>
</head>
<body>
  <script>
    fetch('http://localhost:3000/courses/2')
      .then(res => res.json())
      .then(json => console.log(json))
      .catch(err => console.error('Fetch error:', err));
  </script>
</body>
</html>

----------------------------------------------

get.params - URI parameters

get.query - queryParameters

body = payload = навантаження

........................................................
req.body.title


........................................................


---------------------------------------------------------------------------------------
00 : 33 : 40


